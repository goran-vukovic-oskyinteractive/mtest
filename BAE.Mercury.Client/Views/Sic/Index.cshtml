@*================================================================================
          %name: Index.cshtml %
       %version: 2.1.5 %
      Copyright: Copyright 2012 BAE Systems Australia
                 All rights reserved.
================================================================================*@

@model BAE.Mercury.Client.Models.vmSicTreeNodes

@{
    ViewBag.Title = "Index";
}

@section CSS
{    
    <link href="@Url.Content("/Content/SicBook.css")" rel="stylesheet" type="text/css" />
}

@section Scripts
{    
    <script src="@Url.Content("/Scripts/sicBook.js")" type="text/javascript"></script>  
}

<!-- Dynatree populates on this div: -->
<div id="addressBook">
  <table id="sic-book-table">
    <tr>
      <td class="table-label">Search</td>
      <td>
        <input id="sicSearch" type="text" maxlength="3" /></td>
    </tr>
    <tr>
      <td class="table-label"></td>
      <td>
        <div id="tree" />
      </td>
    </tr>
    <tr>
      <td class="table-label">Selections</td>
      <td style="vertical-align: middle">
        <div id="sicSelections" class="sic-chest"></div>
      </td>
    </tr>
    <tr>
      <td />
      <td>
        <input id="btnAccept" type="button" value="Accept SICs" onclick="acceptSICs(this)" />
        <input id="btnCancel" type="button" value="Cancel" onclick="closeSicBook(this)" />
      </td>
    </tr>
  </table>
</div>


<script type="text/javascript">
  $( document ).ready( function()
  {
    var getRootNodesUrl = '@Url.Action("GetRootNodesAsJson", "Sic")';
    var getChildrenUrl = '@Url.Action("GetChildrenAsJson", "Sic")';
    sicBook.dynatreeSetup(getChildrenUrl, getRootNodesUrl);
    
    // create "exact contains" expression for code to use
    $.expr[":"].econtains = function (obj, index, meta, stack)
    {
      return (obj.textContent || obj.innerText || $(obj).text() || "").toLowerCase() == meta[3].toLowerCase();
    };

    // on sic div focus, set border black
    $(".sic-chest").on("focus", "div .sic-block", function (event)
    {
      $(this).css('border', 'solid 1px Black');
    });

    // on sic div blur, set border to background color
    $(".sic-chest").on("blur", "div .sic-block", function (event)
    {
      $(this).css('border', 'solid 1px #efecf4');
    });

    // on sic div key down event.
    $(".sic-chest").on("keydown", "div", function (event)
    {
      sicKeyDown(event, $(this));
    });

    // Prevent entering characters that will not form a valid SIC.
    $( '#sicSearch' ).bind( 'keypress', function( e )
    {
      var regex = new RegExp( '^[a-zA-Z0-9]+$' );
      var key = String.fromCharCode( !e.charCode ? e.which : e.charCode );
      if ( !regex.test( key ) )
      {
        e.preventDefault();
        return false;
      }
      return true;
    } );

    // Detect changes to field value and navigate to specified node in the tree.
    $( '#sicSearch' ).bind( 'propertychange', function( event )
    {
      if ( event.originalEvent.propertyName === 'value' )
      {
        navigateToSIC( event );
      }
    } );

    // (Non-IE browsers) Detect changes to field value and navigate to specified node in the tree.
    if ( navigator.userAgent.indexOf( "MSIE" ) === -1 )
    {
      $( '#sicSearch' )[0].oninput = function( event )
      {
        navigateToSIC( event );
      };
    }
  } );
</script>
