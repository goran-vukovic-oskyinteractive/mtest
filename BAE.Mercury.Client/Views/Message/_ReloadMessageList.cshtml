 @* =================================================
        %name: _ReloadMessageList.cshtml %
         %version: 20 %
         Copyright: Copyright 2012 BAE Systems Australia
                    All rights reserved.
    =================================================*@

@*    This is the partial view for initial load of  messages on folder click
    It differs from _MessageList in the creation  and sizing of the surrounding "messageList" div *@
@using BAE.Mercury.Client 

@model  BAE.Mercury.Client.Models.vmMessageList

@{ 
    var count = 1;
     @*  work out height of list container div (messagelist) so that scrollbar doesn't resize on ajax load  *@
    var listContainerHeight = Model.ListCount * 77 ;
    var currentGroupHeader = "";
    var firstGroupHeader = "";
    var lastGroupHeader = "";
    @*  store group info in session for _MessageList partial view   *@
    if(Model.isGrouped )
    {
        currentGroupHeader = Model.InitGroupHeader;
        SessionBag.Current.CurrentGroupHeader = currentGroupHeader;
        SessionBag.Current.FirstGroupHeader = currentGroupHeader; @* store for next page*@
    }

    <input type="hidden" id="msgcount" value="@(Model.ListCount)" />
    <input type="hidden" id="pagecount" value="@(Model.PageCount)" />  
    <input type="hidden" id="listheight" value="@(listContainerHeight)" />   
    <input type="hidden" id="recordsinpage" value="@(Model.RecordsPerPage)" /> 
    
    @*   start of messagelist div *@                                                            
    <div  tabindex='0'  id="messageList" style="height:@(listContainerHeight)px" >
        @if (!Model.MessageItems.Any())
        {   
            <span>@Model.NoRecordsMessage</span>       
        }

        @if (Model.VertAlign == "bottom")
        {
            <div style="height:100%;width:100%" id="spacer"> </div>            
        }
        <div   class='offsetCont' >
            @*  cycle through messages  *@    
            @foreach (var item in Model.MessageItems)
            {
                 if (Model.isGrouped  && Model.VertAlign == "bottom" && count == 1)
                {
                    SessionBag.Current.FirstGroupHeader = item.Group; //set for next page up
                } 
                @* Add  a header as group changes, CurrentGroupHeader is set " for first record if ViewBag.VertAlign = "top" *@
                if (Model.isGrouped && ((Model.IsFirstPage && count == 1) || item.Group != currentGroupHeader))
                {
                    @*   create new group header *@                  
                    <div class="listGroupheader" data-group="@(item.Group)"> @*   item.GroupIndex is 1 based index of group *@  
                        <h2>@item.Group</h2>
                    </div>                
                    currentGroupHeader = item.Group;
                    SessionBag.Current.CurrentGroupHeader = currentGroupHeader; @*   store in session for _MessageList partial view *@ 
                } 
                @*   actual message div *@
                string state = item.State;
                string precedence = item.Precedence;
                string attachment = (item.HasAttachment) ? "attachment": "";  
                string sclass = "message " + state + " " + precedence + " " + attachment;
                ViewBag.sClass = sclass;
              if(ViewBag.ItemPartial=="Inbox")
              {
                   @Html.Partial("InboxMessage",item) @* Load the record HTML*@
              }
                if (Model.isGrouped && count == Model.RecordsPerPage)
                {
                    SessionBag.Current.LastGroupHeader = item.Group;//set for next page down
                }  
                count++; @*   increment row counter *@ 
            }@*  end of  message for loop  *@
        </div>
    </div>
        @*   end of messagelist div *@     
    if (Model.isGrouped)
    {
        SessionBag.Current.LastPageIndex = Model.PageIndex;
    }
}


